---
name: CI
on:
  push:
    branches:
      - master
  pull_request:

jobs:
  test:
    name: Test
    timeout-minutes: 5

    strategy:
      fail-fast: false
      matrix:
        os:
          - ubuntu-latest
        go-version:
          - 1.12.x
          - 1.13.x
          - 1.14.x
        images:
          - {postgres: "postgres:9.6", mysql: "mysql:5.5"}
          - {postgres: "postgres:10",  mysql: "mysql:5.6"}
          - {postgres: "postgres:11",  mysql: "mysql:5.7"}
          - {postgres: "postgres:12",  mysql: "mysql:8.0"}

    runs-on: ${{ matrix.os }}

    env:
      GO111MODULE: "on"
      GOPROXY: https://proxy.golang.org
      GOFLAGS: -mod=readonly
      GORACE: halt_on_error=1
      REFORM_POSTGRES_IMAGE: ${{ matrix.images.postgres }}
      REFORM_MYSQL_IMAGE: ${{ matrix.images.mysql }}
      REFORM_MSSQL_IMAGE: microsoft/mssql-server-linux:latest

    steps:
      - name: Set up Go ${{ matrix.go-version }}
        uses: actions/setup-go@v1
        with:
          go-version: ${{ matrix.go-version }}

      # https://github.com/actions/setup-go/issues/14
      - name: Add GOPATH/bin to PATH
        run: echo "::add-path::$(go env GOPATH)/bin"

      - name: Add GO_VERSION to environment
        run: echo "::set-env name=GO_VERSION::$(go version)"

      - name: Check out code into the Go module directory
        uses: actions/checkout@v2

      # - name: Run debug commands
      #   run: |
      #     env
      #     go env
      #     go version
      #     pwd
      #     docker --version
      #     docker-compose --version

      - name: Enable Go modules cache
        uses: actions/cache@v1
        with:
          path: ~/go/pkg/mod
          key: ${{ matrix.platform }}-go-${{ matrix.go-version }}-modules-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ matrix.platform }}-go-${{ matrix.go-version }}-modules-

      - name: Enable Go build cache
        uses: actions/cache@v1
        with:
          path: ~/.cache/go-build
          key: ${{ matrix.platform }}-go-${{ matrix.go-version }}-build-${{ github.ref }}-${{ hashFiles('**') }}
          restore-keys: |
            ${{ matrix.platform }}-go-${{ matrix.go-version }}-build-${{ github.ref }}-
            ${{ matrix.platform }}-go-${{ matrix.go-version }}-build-

      - name: Stop Ubuntu services
        run: sudo systemctl stop mysql

      - name: Start development environment
        run: make env-up-detach

      - name: Download Go modules
        run: go mod download

      - name: Check that it is still possible to install reform without modules
        run: |
          env GO111MODULE=off go get -v ./...
          reform -version
          reform-db -version

      - name: Run init target
        run: make init

      - name: Run test target
        run: make test

      # TODO test again with updated deps

      - name: Check that generated files did not change
        run: |
          git status
          git diff --exit-code

      - name: Upload coverage information
        run: bash <(curl -s https://codecov.io/bash) -f coverage.txt -X fix -e GO_VERSION,REFORM_POSTGRES_IMAGE,REFORM_MYSQL_IMAGE,REFORM_MSSQL_IMAGE
